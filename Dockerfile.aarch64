# syntax=docker/dockerfile:1

FROM ghcr.io/linuxserver/baseimage-alpine:arm64v8-edge AS extractstage

COPY --from=ghcr.io/linuxserver/picons-builder /picons.tar.bz2 /picons.tar.bz2

RUN \
  echo "***** extract picons ****" && \
  mkdir -p /picons && \
  tar xf \
    /picons.tar.bz2 -C \
    /picons

FROM ghcr.io/linuxserver/baseimage-ubuntu:arm64v8-noble

# set version label
ARG BUILD_DATE
ARG VERSION
LABEL build_version="Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}"
LABEL maintainer="saarg"

# environment settings
ENV HOME="/config" \
  ATTACHED_DEVICES_PERMS="/dev/dvb /dev/dri -type c"

RUN \
  echo "**** install runtime packages ****" && \
  curl -1sLf 'https://dl.cloudsmith.io/public/tvheadend/tvheadend/gpg.C6CC06BD69B430C6.key' |  gpg --dearmor >> /usr/share/keyrings/tvheadend-tvheadend-archive-keyring.gpg && \
  curl -1sLf 'https://dl.cloudsmith.io/public/tvheadend/tvheadend/config.deb.txt?distro=ubuntu&codename=noble&component=main' > /etc/apt/sources.list.d/tvheadend-tvheadend.list && \
  chmod 644 /usr/share/keyrings/tvheadend-tvheadend-archive-keyring.gpg && \
  chmod 644 /etc/apt/sources.list.d/tvheadend-tvheadend.list && \
  apt-get update && \
  apt-get install -y \
    comskip \
    ffmpeg \
    libdvbcsa1 \
    libhdhomerun5 \
    libva2 \
    intel-media-va-driver \
    libvpx9 \
    libxml2 \
    libxslt1.1 \
    mesa-va-drivers \
    libopus0 \
    libpcre2-32-0 \
    perl \
    python3-requests \
    python3 \
    tvheadend \
    liburiparser1 \
    libx264-164 \
    libx265-199 \
    xmltv && \
  printf "Linuxserver.io version: ${VERSION}\nBuild-date: ${BUILD_DATE}" > /build_version

# copy local files and buildstage artifacts
COPY --from=extractstage /picons /picons
COPY root/ /

# ports and volumes
EXPOSE 9981 9982
VOLUME /config
